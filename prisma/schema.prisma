generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

model Customer {
    id         Int      @id @default(autoincrement())
    created_at DateTime @default(now()) @db.Timestamptz(6)
    email      String   @unique

    plan Plan @default(FREE)

    workspaces Workspace[]
}

model Workspace {
    id         Int      @id @default(autoincrement())
    created_at DateTime @default(now()) @db.Timestamptz(6)

    name        String
    description String?

    customer   Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
    customerId Int

    flowSessions        FlowSession[]
    activeFlowSessionId Int?
}

model FlowSession {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now()) @db.Timestamptz(6)

    workspace   Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
    workspaceId Int

    events Event[]
}

model Event {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now()) @db.Timestamptz(6)

    eventType   EventType
    description String?

    flowSession   FlowSession @relation(fields: [flowSessionId], references: [id], onDelete: Cascade)
    flowSessionId Int
}

enum EventType {
    CREATE
    ACTIVE
    BREAK
    INTERRUPTION
    END
}

enum Plan {
    FREE
    STANDARD
    PRO
}
