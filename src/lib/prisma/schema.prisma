generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Customer {
  id         String   @id @unique
  created_at DateTime @default(now()) @db.Timestamptz(6)
  email      String   @unique
  plan       Plan     @default(FREE)
  files      File[]
}

model File {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @db.Timestamptz(6)

  url       String
  name      String
  duration  Int // seconds
  size      Int // bytes
  extension String // mp3, wav, etc

  predictionId String?
  prediction   Prediction?      @relation(fields: [predictionId], references: [id], onDelete: Cascade)
  status       PredictionStatus @default(IN_PROGRESS)

  customerId String
  customer   Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
}

model Prediction {
  id          String    @id @default(cuid())
  createdAt   DateTime  @default(now()) @db.Timestamptz(6)
  completedAt DateTime?

  language      Language
  segments      Segment[]
  transcription String

  fileId String
  File   File[]
}

model Segment {
  segmentId String @id @default(cuid())

  id    String
  start Float
  end   Float
  text  String

  predictionId  String
  transcription Prediction @relation(fields: [predictionId], references: [id], onDelete: Cascade)
}

enum Plan {
  FREE
  STANDARD
  PRO
}

enum Language {
  CA
  ES
  EN
  FR
  IT
}

enum PredictionStatus {
  IN_PROGRESS
  COMPLETED
  FAILED
}
